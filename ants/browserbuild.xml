<?xml version="1.0"?>

<project name="BrowserBuild" default="cleanAndBuild">
	<!--<property file="browserbuild.properties" />
	<property file="firefoxspecific.properties" />-->

	<target name="clean" description="clean up everything">
		<delete dir="${generateDir}" />
	</target>

	<target name="build" description="generate executable folder">
		<!-- Copy base directory structure to the broswer location -->
		<copy overwrite="true" todir="${browserDir}${browserSubDir}">
			<fileset dir="${base}">
				<exclude name="**/${ignoreFolderName}/**" />
			</fileset>
		</copy>
		
		<!-- Copy base directory structure to the broswer location -->
		<copy overwrite="true" todir="${browserDir}">
			<fileset dir="${baseBrowserSpecific}">
				<exclude name="**/${ignoreFolderName}/**" />
			</fileset>
		</copy>
		
		<!-- do some browser specific stuffs -->
		<condition property="browserSpecific.isFirefox">
			<equals arg1="${browserName}" arg2="firefox" />
		</condition>
		<antcall target="internalFirefoxSpecific" />
		
		<condition property="browserSpecific.isChrome">
			<equals arg1="${browserName}" arg2="chrome" />
		</condition>
		<antcall target="internalChromeSpecific" />
		

		<condition property="browserSpecific.isOperaChromium">
			<equals arg1="${browserName}" arg2="opera-chromium" />
		</condition>
		<antcall target="internalOperaChromiumSpecific" />
		
		<condition property="browserSpecific.isOpera">
			<equals arg1="${browserName}" arg2="opera" />
		</condition>
		<antcall target="internalOperaSpecific" />
	</target>
	
	<target name="internalFirefoxSpecific" if="browserSpecific.isFirefox">
		<java jar="${htmlModifierJarFile}" fork="true" failonerror="true">
			<arg value="MFO" />
			<arg value="${options}/${optionHtmlFileName}" />
			<arg value="${browserOptions}/${optionHtmlFileName}" />
		</java>
	</target>
	
	<target name="internalChromeSpecific" if="browserSpecific.isChrome">
		<delete file="${browserDir}/icons/pratikabu-stt-64.png" />
	</target>
	
	<target name="internalOperaChromiumSpecific" if="browserSpecific.isOperaChromium">
		<java jar="${htmlModifierJarFile}" fork="true" failonerror="true">
			<arg value="OCOJI" />
			<arg value="${baseBrowserSpecific}/${bsFolderName}/${bsOptionsImplName}" />
			<arg value="${browserSpecific}/${bsOptionsImplName}" />
		</java>
	</target>
	
	<target name="internalOperaSpecific" if="browserSpecific.isOpera">
		<java jar="${htmlModifierJarFile}" fork="true" failonerror="true">
			<arg value="OSJE" />
			<arg value="${browserSTTJSFileLoc}" />
		</java>
	</target>
	
	<target name="minifyFile" description="minify any file js, css">
		<echo>Minifying ${fileLoc}</echo>
		<java jar="${comressorJarFile}" fork="true" failonerror="true">
			<arg value="${fileLoc}" />
			<arg value="-o" />
			<arg value="${fileLoc}" />
		</java>
	</target>
	
	<target name="minifyBuild" depends="build" description="build while compressing the js">
		<!-- compress base js and css -->
		<antcall target="minifyFile">
			<param name="fileLoc" value="${browserDir}${browserSubDir}/${sttJsFileName}" />
		</antcall>
		<antcall target="minifyFile">
			<param name="fileLoc" value="${browserDir}${browserSubDir}/${sttCssFileName}" />
		</antcall>
		<antcall target="minifyFile">
			<param name="fileLoc" value="${browserOptions}/${resFolderName}/${optionJsFileName}" />
		</antcall>
		<antcall target="minifyFile">
			<param name="fileLoc" value="${browserOptions}/${resFolderName}/${optionCssFileName}" />
		</antcall>
		
		<!-- compress browser specific js -->
		<antcall target="minifyFile">
			<param name="fileLoc" value="${browserSpecific}/${bsOptionsImplName}" />
		</antcall>
		<antcall target="minifyFile">
			<param name="fileLoc" value="${browserSpecific}/${bsSTTImpl}" />
		</antcall>
		<antcall target="minifyFile">
			<param name="fileLoc" value="${browserMainDestJSLoc}" />
		</antcall>
		
		<!-- create brwoser specific zip files -->
		<zip destfile="${generatedZipDir}/${browserName}-stt.${deployExtension}">
			<zipfileset dir="${generateDir}/${browserName}"></zipfileset>
		</zip>
	</target>
	
	<target name="cleanAndBuild" depends="clean,build" description="Cleans the generated folder and rebuild it again." />
</project>